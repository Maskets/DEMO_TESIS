import streamlit as st

def app():
    if not st.session_state.get("logged_in", False):
        st.error("üö´ Debe iniciar sesi√≥n para acceder a esta p√°gina")
        st.session_state["current_page"] = "Account"
        st.rerun()
        return

    if not st.session_state.get("workflow_active", False) or not st.session_state.get("student_completed", False):
        st.warning("‚ö†Ô∏è Debe completar el registro del estudiante primero")
        st.session_state["current_page"] = "Student"
        st.rerun()
        return

    st.title("üìù Formulario de Evaluaci√≥n - Estudiantes Deportistas")
    st.markdown("### Complete el cuestionario para el an√°lisis predictivo")
    st.progress(0.66, text="Paso 2 de 3: Formulario de Evaluaci√≥n")

    if st.session_state.get("student_data"):
        student = st.session_state["student_data"]
        st.info(f"üë§ **Estudiante:** {student['nombres']} {student['apellidos']} - {student['codigo_estudiante']}")

    with st.form("formulation_form", clear_on_submit=False):
        st.markdown("#### üìã Secci√≥n 1: Datos Generales")
        col1, col2 = st.columns(2)
        with col1:
            edad = st.text_input("1. Edad (en a√±os) *")
            if edad and not edad.isdigit():
                st.error("Por favor, ingresa solo n√∫meros enteros en el campo de edad.")
            genero = st.selectbox("2. G√©nero *", ["Seleccionar", "Masculino", "Femenino"])
            facultad = st.selectbox("3. Facultad Universitaria *", [
                "Seleccionar", "Administraci√≥n en Hoteler√≠a y Turismo", "Arquitectura", "Artes Contempor√°neas",
                "Ciencias de la Salud", "Ciencias Humanas", "Comunicaciones", "Derecho", "Dise√±o",
                "Econom√≠a", "Educaci√≥n", "Ingenier√≠a", "Negocios", "Psicolog√≠a"
            ])
        with col2:
            ciclo_actual = st.selectbox("4. Ciclo Actual *", ["Seleccionar"] + [str(i) for i in range(1, 11)])
            nivel_socioeconomico = st.selectbox("5. Nivel socioecon√≥mico aproximado *", 
                ["Seleccionar", "Bajo", "Medio bajo", "Medio", "Medio alto", "Alto"])
            apoyo_economico_deporte = st.selectbox("6. ¬øRecibes alg√∫n tipo de apoyo econ√≥mico relacionado al deporte? *", [
                "Seleccionar", "Beca completa", "Beca parcial", "Apoyo en movilidad / alimentaci√≥n", "No recibo apoyo"
            ])

        st.markdown("#### üìö Secci√≥n 2: Rendimiento Acad√©mico")
        col3, col4 = st.columns(2)
        with col3:
            promedio_academico = st.text_input("1. Promedio acad√©mico del √∫ltimo semestre o ciclo (0 a 20) *")
            try:
                if promedio_academico:
                    float(promedio_academico)
            except ValueError:
                st.error("Por favor, ingresa solo n√∫meros decimales v√°lidos en el promedio acad√©mico.")
            afectan_ausencias = st.selectbox("2. ¬øCu√°nto han afectado tus ausencias a clases debido al deporte? *", 
                ["Seleccionar", "1", "2", "3", "4", "5"])
        with col4:
            carga_academica = st.selectbox("3. ¬øC√≥mo calificar√≠as la carga acad√©mica? *", 
                ["Seleccionar", "1", "2", "3", "4", "5"])
            estudios_afectan_deporte = st.selectbox("4. ¬øTus estudios afectan tu rendimiento deportivo? *", 
                ["Seleccionar", "Nunca", "Rara vez", "A veces", "Frecuentemente", "Siempre"])

        st.markdown("#### üèÉ Secci√≥n 3: Rendimiento Deportivo")
        col5, col6 = st.columns(2)
        with col5:
            deporte_practicado = st.selectbox("1. Deporte practicado *", [
                "Seleccionar", "Atletismo", "B√°squet damas", "B√°squet varones", "Escalada", "F√∫tbol damas",
                "F√∫tbol varones", "Futsal damas", "Futsal varones", "Judo", "Karate",
                "Levantamiento de pesas", "Lucha ol√≠mpica", "Nataci√≥n", "Rugby damas", "Rugby varones",
                "Taekwondo", "Tenis de mesa", "Tiro deportivo", "V√≥ley damas", "V√≥ley varones", "Wushu"
            ])
            anos_experiencia = st.selectbox("2. A√±os de experiencia *", 
                ["Seleccionar", "Menos de 1 a√±o", "1 a 3 a√±os", "4 a 6 a√±os", "M√°s de 6 a√±os"])
            ranking_posicion = st.selectbox("3. Ranking o posici√≥n *", 
                ["Seleccionar", "Local", "Regional", "Nacional", "Internacional", "No aplica"])
        with col6:
            competiciones_ano = st.selectbox("4. N√∫mero de competiciones *", 
                ["Seleccionar", "Ninguna", "1 a 5", "M√°s de 5"])
            frecuencia_lesiones = st.selectbox("5. Frecuencia de lesiones *", 
                ["Seleccionar", "Ninguna", "1 a 2 lesiones", "M√°s de 2 lesiones"])

        st.markdown("#### üß† Secci√≥n 4: Factores Psicol√≥gicos y Sociales")
        col7, col8 = st.columns(2)
        with col7:
            estres_deporte = st.selectbox("1. Nivel de estr√©s *", ["Seleccionar", "1", "2", "3", "4", "5"])
            motivacion_competir = st.selectbox("2. Motivaci√≥n para competir *", ["Seleccionar", "1", "2", "3", "4", "5"])
            apoyo_familia = st.selectbox("3. Apoyo emocional de tu familia *", ["Seleccionar", "1", "2", "3", "4", "5"])
        with col8:
            apoyo_entrenador = st.selectbox("4. Apoyo del entrenador *", ["Seleccionar", "1", "2", "3", "4", "5"])
            apoyo_companeros = st.selectbox("5. Apoyo de compa√±eros/as *", ["Seleccionar", "1", "2", "3", "4", "5"])
            integracion_equipo = st.selectbox("6. Integraci√≥n en el equipo *", ["Seleccionar", "1", "2", "3", "4", "5"])

        st.markdown("#### üèãÔ∏è Secci√≥n 5: Carga de Entrenamiento")
        col9, col10 = st.columns(2)
        with col9:
            horas_entrenamiento = st.selectbox("1. Horas de entrenamiento *", 
                ["Seleccionar", "1 a 5 horas", "6 a 10 horas", "M√°s de 10 horas"])
            intensidad_entrenamiento = st.selectbox("2. Intensidad del entrenamiento *", 
                ["Seleccionar", "1", "2", "3", "4", "5"])
        with col10:
            priorizar_entrenamientos = st.radio("3. ¬øPriorizas entrenamientos sobre clases? *", ["S√≠", "No"])
            considerar_dejar_deporte = st.radio("4. ¬øHas considerado dejar el deporte? *", ["S√≠", "No"])

        comentarios_adicionales = st.text_area("Comentarios o Informaci√≥n Adicional", height=100)

        st.markdown("---")
        col_btn1, col_btn2, col_btn3 = st.columns([1, 1, 1])

        with col_btn1:
            if st.form_submit_button("üíæ Guardar", use_container_width=True):
                required_fields = [
                    (edad and edad.isdigit(), "Edad"),
                    (genero != "Seleccionar", "G√©nero"),
                    (facultad != "Seleccionar", "Facultad Universitaria"),
                    (ciclo_actual != "Seleccionar", "Ciclo Actual"),
                    (nivel_socioeconomico != "Seleccionar", "Nivel Socioecon√≥mico"),
                    (apoyo_economico_deporte != "Seleccionar", "Apoyo Econ√≥mico"),
                    (promedio_academico and promedio_academico.replace('.', '').isdigit(), "Promedio Acad√©mico"),
                    (afectan_ausencias != "Seleccionar", "Ausencias"),
                    (carga_academica != "Seleccionar", "Carga Acad√©mica"),
                    (estudios_afectan_deporte != "Seleccionar", "Estudios vs Deporte"),
                    (deporte_practicado != "Seleccionar", "Deporte Practicado"),
                    (anos_experiencia != "Seleccionar", "Experiencia"),
                    (ranking_posicion != "Seleccionar", "Ranking"),
                    (competiciones_ano != "Seleccionar", "Competiciones"),
                    (frecuencia_lesiones != "Seleccionar", "Lesiones"),
                    (estres_deporte != "Seleccionar", "Estr√©s"),
                    (motivacion_competir != "Seleccionar", "Motivaci√≥n"),
                    (apoyo_familia != "Seleccionar", "Apoyo Familiar"),
                    (apoyo_entrenador != "Seleccionar", "Apoyo Entrenador"),
                    (apoyo_companeros != "Seleccionar", "Apoyo Compa√±eros"),
                    (integracion_equipo != "Seleccionar", "Integraci√≥n Equipo"),
                    (horas_entrenamiento != "Seleccionar", "Horas Entrenamiento"),
                    (intensidad_entrenamiento != "Seleccionar", "Intensidad"),
                    (priorizar_entrenamientos in ["S√≠", "No"], "Priorizar Entrenamiento"),
                    (considerar_dejar_deporte in ["S√≠", "No"], "Considerar Dejar")
                ]
                missing_fields = [f for v, f in required_fields if not v]
                if missing_fields:
                    st.error(f"‚ùå Faltan completar: {', '.join(missing_fields)}")
                else:
                    try:
                        promedio_val = float(promedio_academico)
                        if not (0 <= promedio_val <= 20):
                            st.error("‚ùå El promedio debe estar entre 0 y 20")
                            return
                    except ValueError:
                        st.error("‚ùå El promedio debe ser num√©rico")
                        return

                    st.session_state["formulation_data"] = {
                        "edad": int(edad),
                        "genero": genero,
                        "facultad": facultad,
                        "ciclo_actual": ciclo_actual,
                        "nivel_socioeconomico": nivel_socioeconomico,
                        "apoyo_economico_deporte": apoyo_economico_deporte,
                        "promedio_academico": float(promedio_academico),
                        "afectan_ausencias": afectan_ausencias,
                        "carga_academica": carga_academica,
                        "estudios_afectan_deporte": estudios_afectan_deporte,
                        "deporte_practicado": deporte_practicado,
                        "anos_experiencia": anos_experiencia,
                        "ranking_posicion": ranking_posicion,
                        "competiciones_ano": competiciones_ano,
                        "frecuencia_lesiones": frecuencia_lesiones,
                        "estres_deporte": estres_deporte,
                        "motivacion_competir": motivacion_competir,
                        "apoyo_familia": apoyo_familia,
                        "apoyo_entrenador": apoyo_entrenador,
                        "apoyo_companeros": apoyo_companeros,
                        "integracion_equipo": integracion_equipo,
                        "horas_entrenamiento": horas_entrenamiento,
                        "intensidad_entrenamiento": intensidad_entrenamiento,
                        "priorizar_entrenamientos": priorizar_entrenamientos,
                        "considerar_dejar_deporte": considerar_dejar_deporte,
                        "comentarios_adicionales": comentarios_adicionales
                    }
                    st.session_state["formulation_completed"] = True
                    st.success("‚úÖ Formulario guardado correctamente")

        with col_btn3:
            if st.form_submit_button("‚û°Ô∏è Siguiente", use_container_width=True, type="primary"):
                if st.session_state.get("formulation_completed", False):
                    st.session_state["workflow_step"] = "prediction"
                    st.session_state["current_page"] = "Prediction"
                    st.rerun()
                else:
                    st.error("‚ùå Debe guardar los datos antes de continuar")
